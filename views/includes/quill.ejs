<script src="/assets/js/highlight.min.js"></script>
<script src="/assets/js/quill.js"></script>
<script src="/assets/js/image-resize.min.js"></script>
<link rel="stylesheet" href="/assets/css/monokai-sublime.min.css" />
<!-- Include stylesheet -->
<link href="/assets/css/quill.snow.css" rel="stylesheet" />


<form class="container" id="saveData" action="#" method="post">

  <input class="form-control px-5 mx-0" placeholder="عنوان" dir="rtl" id="title"
    value="<%= oldInput.title  ? oldInput.title : '' %>" type="text" name="title" />
  <div id="toolbar" class="">

  </div>
  <div id="editor" class="bg-white mh-100"></div>
  <div class="d-flex flex-row-reverse bg-secondary">
    <input class="btn  btn-info font-weight-bolder  m-2" value="تگ" type="button" onclick="tagHandler(this)" />
    <input class="btn  btn-info font-weight-bolder  m-2" value="نوشته های مرتبط" type="button"
      onclick="similarPostHandler(this)" />
    <input class="btn  btn-success font-weight-bolder  m-2" value="<%= update === true ? 'ویرایش' : 'ذخیره' %>"
      type="submit" />
  </div>
</form>






<!-- Initialize Quill editor -->
<script>

  var quill = new Quill("#editor", {
    modules: {
      imageResize: {
        displaySize: true,
      },
      syntax: true,
      toolbar: {
        container: [
          ["bold", "italic", "underline", "strike"], // toggled buttons
          ["blockquote", "code-block"],
          [{ header: 1 }, { header: 2 }], // custom button values
          [{ list: "ordered" }, { list: "bullet" }],
          [{ script: "sub" }, { script: "super" }], // superscript/subscript
          [{ indent: "-1" }, { indent: "+1" }], // outdent/indent
          [{ direction: "rtl" }], // text direction
          [{ size: ["small", false, "large", "huge"] }], // custom dropdown
          [{ header: [1, 2, 3, 4, 5, 6, false] }],
          ["link", "image", "video", "formula"],
          [{ color: [] }, { background: [] }], // dropdown with defaults from theme
          [{ font: [] }],
          [{ align: [] }],
        ],
        handlers: { image: imageHandler, video: videoHandler },
      },
    },
    theme: "snow",
  });



  if ('<%= oldInput.postPath %>') {
    $.ajax({
      type: 'GET', url: '/admin/postData'
      , success: function (result) {
        const title = "<%= oldInput.title %>"
        let editPost;
        for (let post of result) { if (post.postName === title) { editPost = post } }
        const deltaString = JSON.parse(editPost.deltaContent)
        quill.setContents(deltaString, 'api');
      }
    })
  }

  function tagHandler() {
    $("#tagModal").modal("show");
  }
  function similarPostHandler() {
    $("#similarPostModal").modal("show");
  }
  function imageHandler() {
    var range = this.quill.getSelection();
    $("#galleryModal").modal("show");
  }
  function videoHandler() {
    var range = this.quill.getSelection();
    $("#galleryModal").modal("show");
  }

  //send post to backend
  $("form").submit(function (e) {
    const htmlContent = quill.root.innerHTML;
    const deltaContent = JSON.stringify(quill.getContents());
    const title = document.getElementById('title').value;
    $.ajax({
      type: "POST",
      url: "/admin/addPost",
      data: { htmlContent: htmlContent, deltaContent: deltaContent, title: title, postPath: '<%= oldInput.postPath %>' },
      success: function (result) {
        console.log(result);
        window.location.replace("/admin/posts");
      },
      error: function (result) {
        window.location.replace("/admin/updatePost");
      },
    });
    e.preventDefault();
  });
</script>